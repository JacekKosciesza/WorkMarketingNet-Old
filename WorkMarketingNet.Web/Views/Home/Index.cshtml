@*
	For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewBag.Title = "WorkMarketingNet";
}

@section polymer{
	<!-- Load platform support before any code that touches the DOM. -->
	<script src="/lib/webcomponentsjs/webcomponents.js"></script>

	<!-- Load the component using an HTML Import -->
	<link rel="import" href="/lib/core-scaffold/core-scaffold.html">
	<link rel="import" href="/lib/core-toolbar/core-toolbar.html">
	<link rel="import" href="/lib/core-menu/core-menu.html">

	<link rel="import" href="/lib/core-animated-pages/core-animated-pages.html">
	<link rel="import" href="/lib/core-animated-pages/transitions/slide-from-right.html">

	<link rel="import" href="/lib/core-icon-button/core-icon-button.html">
	<link rel="import" href="/lib/core-icon/core-icon.html">

	<link rel="import" href="/lib/paper-item/paper-item.html">
	<link rel="import" href="/lib/flatiron-director/flatiron-director.html">
	<link rel="import" href="/lib/font-roboto/roboto.html">
	<link rel="import" href="/lib/core-a11y-keys/core-a11y-keys.html">
	<link rel="import" href="/lib/core-ajax/core-ajax.html">
}

<body unresolved fullbleed>
	<template is="auto-binding">
		<!-- Route controller. -->
		<flatiron-director route="{{route}}" autohash></flatiron-director>

		<!-- Keyboard nav controller. -->
		<core-a11y-keys id="keys" target="{{parentElement}}" keys="up down left right space space+shift" on-keys-pressed="{{keyHandler}}"></core-a11y-keys>

		<core-ajax id="ajax" auto url="{{selectedPage.page.url}}" handleas="document" on-core-response="{{onResponse}}"></core-ajax>

		<core-scaffold id="scaffold">
			<nav>
				<core-toolbar><span>Single Page Polymer</span></core-toolbar>
				<core-menu valueattr="hash" selected="{{route}}" selectedModel="{{selectedPage}}" on-core-select="{{menuItemSelected}}">
					<template repeat="{{page in pages}}">
						<paper-item hash="{{page.hash}}" noink>
							<core-icon icon="label{{route != page.hash ? '-outline' : ''}}"></core-icon>
							<a _href="{{page.url}}">{{page.name}}</a>
						</paper-item>
					</template>
				</core-menu>
			</nav>
			<core-toolbar tool flex>
				<div flex>Application</div>
				<core-icon-button icon="refresh"></core-icon-button>
				<core-icon-button icon="add"></core-icon-button>
			</core-toolbar>
			<div layout horizontal center-center fit>
				<core-animated-pages id="pages" valueattr="hash" selected="{{route}}" transitions="slide-from-right" on-tap="{{cyclePages}}">
					<template repeat="{{page in pages}}">
						<section hash="{{page.hash}}" layout vertical center-center>
							<div>{{page.name}}</div>
						</section>
					</template>
				</core-animated-pages>
			</div>
		</core-scaffold>
	</template>
</body>

@section scripts{
	<script>
		var template = document.querySelector('template[is="auto-binding"]');
		template.pages = [
		  { name: 'Home', hash: 'home', url: '/polymer/elements/homepage.html' },
		  { name: 'Subpage 1', hash: 'subpage1', url: '/polymer/elements/subpage1.html' },
		  { name: 'Subpage 2', hash: 'subpage2', url: '/polymer/elements/subpage2.html' },
		];
		var DEFAULT_ROUTE = template.pages[0].hash;
		template.addEventListener('template-bound', function (e) {
			// Use URL hash for initial route. Otherwise, use the first page.
			this.route = this.route || DEFAULT_ROUTE;
		});
		template.keyHandler = function (e, detail, sender) {
			var pages = document.querySelector('#pages');

			switch (detail.key) {
				case 'left':
				case 'up':
					pages.selectPrevious();
					break;
				case 'right':
				case 'down':
					pages.selectNext();
					break;
				case 'space':
					detail.shift ? pages.selectPrevious() : pages.selectNext();
					break;
			}
		};
		template.onResponse = function (e, detail, sender) {
			var article = detail.response.querySelector('article'); //var article = detail.response.querySelector('scroll-area article');

			var pages = document.querySelector('#pages');
			this.injectBoundHTML(article.innerHTML, pages.selectedItem.firstElementChild);
		};
		template.menuItemSelected = function (e, detail, sender) {
			if (detail.isSelected) {
				scaffold.closeDrawer();
			}
		};
		template.cyclePages = function (e, detail, sender) {
			// If click was on a link, navigate and don't cycle page.
			if (e.path[0].localName == 'a') {
				return;
			}
			e.shiftKey ? sender.selectPrevious(true) :
						 sender.selectNext(true);
		};
	</script>
}
