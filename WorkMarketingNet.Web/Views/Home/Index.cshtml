@*
	For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewBag.Title = "WorkMarketingNet";
}

@inject WorkMarketingNet.Web.Services.ILocalizationService Localization

@functions{
	string T(string text, params object[] args) { return Localization.Translate(text, args); }
}

@section polymer{
	<!-- Load platform support before any code that touches the DOM. -->
	<script src="/lib/webcomponentsjs/webcomponents.js"></script>

	<!-- Load the component using an HTML Import -->
	<link rel="import" href="/lib/core-scaffold/core-scaffold.html">
	<link rel="import" href="/lib/core-toolbar/core-toolbar.html">
	<link rel="import" href="/lib/core-menu/core-menu.html">

	<link rel="import" href="/lib/core-animated-pages/core-animated-pages.html">
	<link rel="import" href="/lib/core-animated-pages/transitions/slide-from-right.html">
	<link rel="import" href="/lib/core-image/core-image.html">
	<link rel="import" href="/lib/core-icon-button/core-icon-button.html">
	<link rel="import" href="/lib/core-icon/core-icon.html">
	<link rel="import" href="/lib/core-icons/social-icons.html">
	<link rel="import" href="/lib/core-icons/av-icons.html">
	<link rel="import" href="/lib/core-icons/communication-icons.html">
	

	<link rel="import" href="/lib/paper-button/paper-button.html">
	<link rel="import" href="/lib/paper-menu-button/paper-menu-button.html">
	<link rel="import" href="/lib/paper-item/paper-item.html">
	<link rel="import" href="/lib/flatiron-director/flatiron-director.html">
	<link rel="import" href="/lib/font-roboto/roboto.html">
	<link rel="import" href="/lib/core-a11y-keys/core-a11y-keys.html">
	<link rel="import" href="/lib/core-ajax/core-ajax.html">

	<link href="/lib/core-collapse/core-collapse.html" rel="import">
	<link href="/lib/core-icons/core-icons.html" rel="import">	
	<link href="/lib/paper-dropdown/paper-dropdown.html" rel="import">
	<link href="/lib/paper-icon-button/paper-icon-button.html" rel="import">

	<link rel="import" href="/lib/paper-dialog/paper-dialog.html">
	<link rel="import" href="/lib/paper-dialog/paper-action-dialog.html">
	<link rel="import" href="/lib/paper-button/paper-button.html">	

	@*<link rel="import" href="/lib/core-label/core-label.html">
	<link rel="import" href="/lib/paper-checkbox/paper-checkbox.html">

	<link href="/lib/paper-input/paper-autogrow-textarea.html" rel="import">
	<link href="/lib/paper-input/paper-input-decorator.html" rel="import">
	<link href="/lib/paper-input/paper-input.html" rel="import">
	<link href="/lib/paper-input/paper-char-counter.html" rel="import">*@

	<link rel="import" href="/lib/paper-toast/paper-toast.html">
}

	<template is="auto-binding">
		<!-- Route controller. 
		<flatiron-director route="{{route}}" autohash></flatiron-director>

		<!-- Keyboard nav controller. -->
		<core-a11y-keys id="keys" target="{{parentElement}}" keys="up down left right space space+shift" on-keys-pressed="{{keyHandler}}"></core-a11y-keys>

		<core-ajax id="ajax" auto url="{{selectedPage.page.url}}" handleas="document" on-core-response="{{onResponse}}"></core-ajax>

		<core-scaffold id="scaffold">
			<nav>
				<core-toolbar>
					<img src="/images/avatar-01.svg" />
				</core-toolbar>
				<core-menu valueattr="hash" selected="{{route}}" selectedModel="{{selectedPage}}" on-core-select="{{menuItemSelected}}">
					<template repeat="{{page in pages}}">
						<paper-item hash="{{page.hash}}" noink>
							@*<core-icon icon="label{{route != page.hash ? '-outline' : ''}}"></core-icon>*@
							<core-icon icon="{{page.icon}}"></core-icon>
							<a _href="{{page.url}}">{{page.name}}</a>
						</paper-item>
					</template>
				</core-menu>
			</nav>
			<core-toolbar tool flex>
				<div flex class="brand">
					<core-icon-button src="/images/logos/WorkMarketingNet/logo-48x48-w.png"><span class="work">Work</span><span class="marketing">Marketing</span><span class="net">Net</span><small>&nbsp;<sup>&reg;</sup></small></core-icon-button>		
					@*<core-image src="/images/logos/WorkMarketingNet/logo-48x48-w.png" style="padding:5px;"></core-image>*@
					@*<img src="/images/logos/WorkMarketingNet/logo-48x48-w.png" alt="WorkMarketingNet Logo" style="float:left; margin-right:5px;"/>
					<span class="work">Work</span><span class="marketing">Marketing</span><span class="net">Net</span><small>&nbsp;<sup>&reg;</sup></small>*@
				</div>
				<paper-menu-button relative>
					<core-icon-button src="/images/jacek-kosciesza.jpg"></core-icon-button>
					@*<paper-icon-button icon="menu" noink></paper-icon-button>*@
					<paper-dropdown class="dropdown">
						<core-menu class="menu">
							<paper-item>Account</paper-item>
							<paper-item>Profile</paper-item>
							<paper-item>Logout</paper-item>
						</core-menu>
					</paper-dropdown>
				</paper-menu-button>
				<paper-button raised noink class="colored" role="button" tabindex="0" on-tap="{{toggleDialog}}"><core-icon icon="social:person" aria-label="sign-in" role="img"></core-icon>@T("Sign In")</paper-button>
				<core-icon-button icon="social:notifications-none" aria-label="notifications" role="img"></core-icon-button>
				<core-icon-button icon="settings" aria-label="settings" role="img"></core-icon-button>	
				@*<core-icon-button src="/images/jacek-kosciesza.jpg"></core-icon-button>*@		
			</core-toolbar>
			<div layout horizontal center-center fit>
				<core-animated-pages id="pages" valueattr="hash" selected="{{route}}" transitions="slide-from-right"> @*on-tap="{{cyclePages}}"*@
					<template repeat="{{page in pages}}">
						<section hash="{{page.hash}}" layout vertical center-center>
							<div>{{page.name}}</div>
						</section>
					</template>
				</core-animated-pages>
			</div>
		</core-scaffold>
		<paper-toast id="toast1" class="capsule" text="{{toast.Text}}" style="padding-right: 60px;"></paper-toast>
	</template>

@section scripts{
	<script src="/lib/jquery/jquery.js"></script>
	<script src="/lib/signalr/jquery.signalr.js"></script>
	<script src="~/signalr/hubs"></script>
	<script>
		var template = document.querySelector('template[is="auto-binding"]');
		template.pages = [
		  { name: 'Home', icon: 'home', hash: 'home', url: '/polymer/elements/homepage.html' },
		  { name: 'Companies', icon: 'communication:business', hash: 'companies', url: '/polymer/elements/companies.html' },
		  { name: 'Glossary', icon: 'av:my-library-books', hash: 'glossary', url: '/polymer/elements/glossary.html' },
		  { name: '@T("Settings")', icon: 'settings', hash: 'settings', url: 'settings' },
		];
		var DEFAULT_ROUTE = template.pages[0].hash;
		template.addEventListener('template-bound', function (e) {
			// Use URL hash for initial route. Otherwise, use the first page.
			this.route = this.route || DEFAULT_ROUTE;
		});
		template.keyHandler = function (e, detail, sender) {
			var pages = document.querySelector('#pages');

			switch (detail.key) {
				case 'left':
				case 'up':
					pages.selectPrevious();
					break;
				case 'right':
				case 'down':
					pages.selectNext();
					break;
				case 'space':
					detail.shift ? pages.selectPrevious() : pages.selectNext();
					break;
			}
		};
		template.onResponse = function (e, detail, sender) {
			var article = detail.response.querySelector('article'); //var article = detail.response.querySelector('scroll-area article');

			var pages = document.querySelector('#pages');
			this.injectBoundHTML(article.innerHTML, pages.selectedItem.firstElementChild);
		};
		template.menuItemSelected = function (e, detail, sender) {
			if (detail.isSelected) {
				scaffold.closeDrawer();
			}
		};
		template.cyclePages = function (e, detail, sender) {
			// If click was on a link, navigate and don't cycle page.
			if (e.path[0].localName == 'a') {
				return;
			}
			e.shiftKey ? sender.selectPrevious(true) :
						 sender.selectNext(true);
		};
		//template.toggleDialog = function (e, detail, sender) {
		//	var dialog = document.querySelector('#dialog');
		//	dialog.toggle();
		//};
	
		$.connection.hub.logging = true;
		var toastHub = $.connection.toast;

		toastHub.client.show = function (toast) {
			template.toast = toast;
			document.querySelector('#toast1').show()
			//alert(toast.Text);
		};

		$.connection.hub.start().done(function () {
			console.log('hub connection open');
		});
	</script>
}
